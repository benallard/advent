use cpu::{process, CPU};

fn test(pgm: &[i64], input: i64, output: Option<i64>) {
    let mut cpu = CPU::new(&pgm);
    cpu.feed(input);
    cpu.run();
    assert_eq!(output, cpu.starve());
}

// Part 1

#[test]
fn io() {
    test(&[3, 0, 4, 0, 99], 42, Some(42));
}

#[test]
fn mode() {
    process(&mut vec![1002, 4, 3, 4, 33]);
}

#[test]
fn neg() {
    process(&mut vec![1101, 100, -1, 4, 0]);
}

// Part 2

#[test]
fn iftest() {
    test(&[3, 9, 8, 9, 10, 9, 4, 9, 99, -1, 8], 8, Some(1));
    test(&[3, 9, 8, 9, 10, 9, 4, 9, 99, -1, 8], 42, Some(0));

    test(&[3, 9, 7, 9, 10, 9, 4, 9, 99, -1, 8], 3, Some(1));
    test(&[3, 9, 7, 9, 10, 9, 4, 9, 99, -1, 8], 8, Some(0));
    test(&[3, 9, 7, 9, 10, 9, 4, 9, 99, -1, 8], 42, Some(0));

    test(&[3, 3, 1108, -1, 8, 3, 4, 3, 99], 8, Some(1));
    test(&[3, 3, 1108, -1, 8, 3, 4, 3, 99], 42, Some(0));

    test(&[3, 3, 1107, -1, 8, 3, 4, 3, 99], 0, Some(1));
    test(&[3, 3, 1107, -1, 8, 3, 4, 3, 99], 8, Some(0));
    test(&[3, 3, 1107, -1, 8, 3, 4, 3, 99], 9, Some(0));
}

#[test]
fn moreiftests() {
    test(
        &[3, 12, 6, 12, 15, 1, 13, 14, 13, 4, 13, 99, -1, 0, 1, 9],
        0,
        Some(0),
    );
    test(
        &[3, 12, 6, 12, 15, 1, 13, 14, 13, 4, 13, 99, -1, 0, 1, 9],
        632,
        Some(1),
    );

    test(
        &[3, 3, 1105, -1, 9, 1101, 0, 0, 12, 4, 12, 99, 1],
        0,
        Some(0),
    );
    test(
        &[3, 3, 1105, -1, 9, 1101, 0, 0, 12, 4, 12, 99, 1],
        8,
        Some(1),
    );
}

#[test]
fn largeiftest() {
    test(
        &[
            3, 21, 1008, 21, 8, 20, 1005, 20, 22, 107, 8, 21, 20, 1006, 20, 31, 1106, 0, 36, 98, 0,
            0, 1002, 21, 125, 20, 4, 20, 1105, 1, 46, 104, 999, 1105, 1, 46, 1101, 1000, 1, 20, 4,
            20, 1105, 1, 46, 98, 99,
        ],
        -42,
        Some(999),
    );
    test(
        &[
            3, 21, 1008, 21, 8, 20, 1005, 20, 22, 107, 8, 21, 20, 1006, 20, 31, 1106, 0, 36, 98, 0,
            0, 1002, 21, 125, 20, 4, 20, 1105, 1, 46, 104, 999, 1105, 1, 46, 1101, 1000, 1, 20, 4,
            20, 1105, 1, 46, 98, 99,
        ],
        8,
        Some(1000),
    );
    test(
        &[
            3, 21, 1008, 21, 8, 20, 1005, 20, 22, 107, 8, 21, 20, 1006, 20, 31, 1106, 0, 36, 98, 0,
            0, 1002, 21, 125, 20, 4, 20, 1105, 1, 46, 104, 999, 1105, 1, 46, 1101, 1000, 1, 20, 4,
            20, 1105, 1, 46, 98, 99,
        ],
        42,
        Some(1001),
    );
}
